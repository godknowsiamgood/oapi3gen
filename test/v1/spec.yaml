openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /test_default:
    post:
      parameters:
        - name: q1
          schema:
            type: integer
            default: 20
          in: query
        - name: q2
          schema:
            type: integer
          in: query
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                b1:
                  type: integer
                  default: 10
                  minimum: 0
                  maximum: 100
                b2:
                  type: integer
      responses:
        '200':
          description: OK
  /body1:
    post:
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: OK
  /body2:
    post:
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
  /body3:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
  /body4:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                a:
                  type: string
      responses:
        '200':
          description: OK
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /ccc:
    post:
      requestBody:
        required: false
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: OK
  /bbb:
    post:
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
      responses:
        '200':
          description: OK
  /aaa:
    post:
      parameters:
        - name: test
          in: query
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: OK
    put:
      parameters:
        - name: test
          in: query
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: OK
    get:
      responses:
        '200':
          description: A paged array of pets
          content:
            image/png:
              schema:
                type: string
                format: binary

  /test_inners:
    get:
      parameters:
        - name: in_1
          in: query
          schema:
            $ref: '#/components/schemas/InnerMap'
        - name: in_2
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/InnerMap'
        - name: in_3
          in: query
          schema:
            $ref: '#/components/schemas/InnerStruct'
        - name: in_4
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/InnerStruct'
      responses:
        '200':
          description: OK
  /testFromData:
    post:
      parameters:
        - name: in_1
          in: query
          schema:
            type: string
        - name: in_2
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                  description: Skip this parameter to create new author
                name:
                  type: string
                url:
                  type: string
                avatar_image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK

  '/array1':
    get:
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    text:
                      type: string

  '/array2':
    get:
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
components:
  schemas:
    InnerMap:
      type: object
      additionalProperties: true
    InnerStruct:
      type: object
      properties:
        x:
          type: string
        y:
          type: string
    Outer:
      type: object
      required:
        - inner1
        - inner3
      properties:
        inner1:
          $ref: '#/components/schemas/InnerMap'
        inner2:
          $ref: '#/components/schemas/InnerMap'
        inner3:
          $ref: '#/components/schemas/InnerStruct'
        inner4:
          $ref: '#/components/schemas/InnerStruct'
        z:
          type: string
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string