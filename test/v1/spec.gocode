package v1

/**
    AUTOGENERATED. Please, do not edit.
**/

import (
	"net/http"
)

/* Components schemas */

type ErrorSchema struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

type InnerMapSchema map[string]interface{}

type InnerStructSchema struct {
	X string `json:"x,omitempty"`
	Y string `json:"y,omitempty"`
}

type OuterSchema struct {
	Inner1 InnerMapSchema     `json:"inner1"`
	Inner2 InnerMapSchema     `json:"inner2,omitempty"`
	Inner3 InnerStructSchema  `json:"inner3"`
	Inner4 *InnerStructSchema `json:"inner4,omitempty"`
	Z      string             `json:"z,omitempty"`
}

type PetSchema struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
	Tag  string `json:"tag,omitempty"`
}

type PetsSchema []PetSchema

/* Components responses */

/* Parameters */

type PostAaaParams struct {
	Test *int64
}

type PutAaaParams struct {
	Test *int64
}

type ListPetsParams struct {
	Limit *int32
}

type ShowPetByIdParams struct {
	PetId string
}

type PostTestFromDataParams struct {
	In1 *string
	In2 string
}

type PostTestDefaultParams struct {
	Q1 int64
	Q2 *int64
}

type GetTestInnersParams struct {
	In1 InnerMapSchema
	In2 InnerMapSchema
	In3 *InnerStructSchema
	In4 InnerStructSchema
}

/* Requests bodies */

type PostAaaBody PetSchema

type PutAaaBody PetSchema

type PostBbbBody []int64

type PostBody1Body PetSchema

type PostBody2Body map[string]interface{}

type PostBody3Body map[string]interface{}

type PostBody4Body struct {
	A *string `json:"a"`
}

type PostTestFromDataBody struct {
	Id   int64   `json:"id"`
	Name string  `json:"name"`
	Url  *string `json:"url"`
}

type PostTestDefaultBody struct {
	B1 int64  `json:"b1"`
	B2 *int64 `json:"b2"`
}

/* Response objects */

/* Responses */

type GetArray1Response struct {
	Code    int
	Http200 []struct {
		Key  string `json:"key,omitempty"`
		Text string `json:"text,omitempty"`
	}
}

type GetArray2Response struct {
	Code    int
	Http200 []PetSchema
}

type ListPetsResponse struct {
	Code        int
	Http200     PetsSchema
	HttpDefault *ErrorSchema
}

type CreatePetsResponse struct {
	Code int

	HttpDefault *ErrorSchema
}

type ShowPetByIdResponse struct {
	Code        int
	Http200     *PetSchema
	HttpDefault *ErrorSchema
}

type Controller interface {
	GetAaa(req *http.Request, res http.ResponseWriter) int
	PostAaa(params *PostAaaParams, body *PostAaaBody, req *http.Request, res http.ResponseWriter) int
	PutAaa(params *PutAaaParams, body *PutAaaBody, req *http.Request, res http.ResponseWriter) int
	GetArray1(req *http.Request, res http.ResponseWriter) GetArray1Response
	GetArray2(req *http.Request, res http.ResponseWriter) GetArray2Response
	PostBbb(body *PostBbbBody, req *http.Request, res http.ResponseWriter) int
	PostBody1(body *PostBody1Body, req *http.Request, res http.ResponseWriter) int
	PostBody2(body *PostBody2Body, req *http.Request, res http.ResponseWriter) int
	PostBody3(body *PostBody3Body, req *http.Request, res http.ResponseWriter) int
	PostBody4(body *PostBody4Body, req *http.Request, res http.ResponseWriter) int
	PostCcc(req *http.Request, res http.ResponseWriter) int
	ListPets(params *ListPetsParams, req *http.Request, res http.ResponseWriter) ListPetsResponse
	CreatePets(req *http.Request, res http.ResponseWriter) CreatePetsResponse
	ShowPetById(params *ShowPetByIdParams, req *http.Request, res http.ResponseWriter) ShowPetByIdResponse
	PostTestFromData(params *PostTestFromDataParams, body *PostTestFromDataBody, req *http.Request, res http.ResponseWriter) int
	PostTestDefault(params *PostTestDefaultParams, body *PostTestDefaultBody, req *http.Request, res http.ResponseWriter) int
	GetTestInners(params *GetTestInnersParams, req *http.Request, res http.ResponseWriter) int
}
